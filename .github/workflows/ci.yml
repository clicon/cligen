name: CLIgen CI

on:
  push:
    branches:
       - master
       - test-actions
       - add_create_deb_packet
  pull_request:
    branches: [ master ]

jobs:
  ubuntu-build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: install expect
      run: sudo apt install -y expect
    - name: configure
      run: ./configure
    - name: make
      run: make
    - name: make install
      run: sudo make install
    - name: ldconfig
      run: sudo ldconfig
    - name: make test
      run: make test

  ubuntu-coverage:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: install expect
      run: sudo apt install -y expect
    - name: configure w coverage
      run: ./configure CPPFLAGS="-fprofile-arcs -ftest-coverage -O0" CFLAGS="" LDFLAGS="-fprofile-arcs -lgcov"
    - name: make
      run: make
    - name: make install
      run: sudo make install
    - name: ldconfig
      run: sudo ldconfig
    - name: make test
      run: make test
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        verbose: true
        token: ${{ secrets.CODECOV_TOKEN }}

  create_deb_packet:

    runs-on: ubuntu-20.04

    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: sudo apt update && sudo apt install build-essential flex fakeroot bison lsb-release make -y
      - name: create dir for build
        run: mkdir ${{ github.workspace }}/build
      - name: configure
        run: ./configure
      - name: make
        run: make
      - name: make install
        run: sudo make install DESTDIR=${{ github.workspace }}/build
      - name: copy file for build deb packet
        run: cp ${{ github.workspace }}/build_packet/debian ${{ github.workspace }}/build
      - name: run build packet
        run: cd ${{ github.workspace }}/build && dpkg-buildpackage -us -uc
      - name: show directory
        run: ls -l ${{ github.workspace }}
#      - name: Create deb packet
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.run_number }}
#          release_name: cligen_7.1.0-${{ github.run_number }}
#          draft: false
#          prerelease: false